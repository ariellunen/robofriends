{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","searchfield","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,GACxB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAA1B,cACtB,gCACI,6BAAKF,IACL,4BAAIC,WCOLK,EAZE,SAAC,GAAe,IAAbC,EAAY,EAAZA,OAChB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OAAQ,cAAC,EAAD,CAAcR,GAAMK,EAAOG,GAAGR,GAAIF,KAAMO,EAAOG,GAAGV,KAAMC,MAAOM,EAAOG,GAAGT,OAA9DS,SCGxBC,EATG,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,aAA+B,EAAjBC,YAC9B,OACI,qBAAKV,UAAU,MAAf,SACA,uBAAOA,UAAU,mCAAmCW,KAAK,SAASC,YAAY,gBAAgBC,SAAUJ,OCKjGK,G,MARA,SAACC,GACZ,OACE,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGJ,EAAMK,aCmBAC,E,kDArBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAS,GAHC,E,8DAOAC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAIzB,OAAGG,KAAKJ,MAAMC,SAEN,0DAGDG,KAAKX,MAAMK,a,GAlBCQ,aC+CZC,E,kDAzCX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACjB,YAAaqB,EAAMC,OAAOC,SAbzC,EAAKX,MAAQ,CACTlB,OAAQ,GACRM,YAAY,IAJP,E,gEAQO,IAAD,OACfwB,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACvB,OAAQkC,S,+BAOrC,IAAD,OACEC,EAAiBb,KAAKJ,MAAMlB,OAAOoC,QAAO,SAAApC,GAC5C,OAAOA,EAAOP,KAAK4C,cAAcC,SAAS,EAAKpB,MAAMZ,YAAY+B,kBAErE,OAAgC,IAA7Bf,KAAKJ,MAAMlB,OAAOuC,OACV,yCAIH,sBAAK3C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,2BACA,cAAC,EAAD,CAAWS,aAAciB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQmC,e,GAjC5BX,aCKHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.aa4c285b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) =>{\r\n    return(\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='roborts' src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) =>{\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (<Card key={i} id = {robots[i].id} name={robots[i].name} email={robots[i].email} /> );      \r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange, searchfield}) => {\r\n    return(\r\n        <div className='pa2'>\r\n        <input className='pa3 ba b--green bg-lightest-blue' type='search' placeholder='search robots' onChange={searchChange}></input>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n      <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n        {props.children}\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError:false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return(\r\n                <h1>Oooops. That is not good</h1>\r\n            );\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield:''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({robots: users}));\r\n    }\r\n\r\n    onSearchChange = (event) =>{\r\n        this.setState({searchfield: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const filteredRobots = this.state.robots.filter(robots =>{\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        });\r\n        if(this.state.robots.length === 0){\r\n            return <h1>Loading</h1>\r\n        }\r\n        else{\r\n            return(\r\n                <div className='tc'>\r\n                    <h1 className=\"f1\">Robot Friends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots}/>\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/container/App';\nimport reportWebVitals from './reportWebVitals';\nimport \"tachyons\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}